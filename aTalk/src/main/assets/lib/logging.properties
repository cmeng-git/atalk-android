############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= net.java.sip.communicator.util.FileHandler, org.atalk.android.util.AndroidConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overridden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
#.level=FINEST
.level=INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
net.java.sip.communicator.util.FileHandler.limit = 5000000
net.java.sip.communicator.util.FileHandler.count = 3
net.java.sip.communicator.util.FileHandler.formatter = net.java.sip.communicator.util.ScLogFormatter
net.java.sip.communicator.util.FileHandler.level = ALL

# Set console level to ALL and use Android Logcat levels for output
org.atalk.android.util.AndroidConsoleHandler.level = ALL
org.atalk.android.util.AndroidConsoleHandler.useAndroidLevels = true

#org.atalk.impl.neomedia.level = FINEST
#net.sf.fmj.level = FINEST

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# We don't want trace logs from joscar and joustsim
net.kano.level = INFO

# We don't want trace logs from java-jml
net.sf.cindy.impl.level = INFO

# But we want everything coming from the sip-comm

# For example, set the com.xyz.foo logger to only log SEVERE messages:
com.xyz.foo.level = SEVERE
sun.awt.level = INFO
java.awt.level = INFO
javax.swing.level = INFO

# Section added until new video system is not tested enough
fmj.level=ALL
javax.media.level=ALL
service.protocol.media.level=ALL
net.sf.fmj.media.level=ALL

org.atalk.android.gui.call.level=ALL
org.atalk.impl.neomedia.jmfext.media.protocol.level=ALL
org.atalk.impl.neomedia.jmfext.media.protocol.androidcamera.level=INFO
org.atalk.impl.neomedia.device.level=ALL
org.atalk.impl.neomedia.device.util.level=INFO
org.atalk.impl.neomedia.codec.level=ALL
org.atalk.impl.neomedia.codec.audio.level=SEVERE
org.atalk.impl.neomedia.codec.video.level=INFO
# org.ice4j.ice.ConnectivityCheckClient.level=ALL
# org.bitlet.weupnp.GatewayDiscover.level=SEVERE

# de.measite.minidns.level=FINEST
# org.ice4j.level=FINEST
# org.jivesoftware.smack.level=FINEST
# org.igniterealtime.jbosh.level=FINEST
# org.minidns.level=FINEST